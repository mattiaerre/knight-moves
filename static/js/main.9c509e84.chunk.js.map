{"version":3,"sources":["domain/constants.js","domain/makeAllowedMoves.js","domain/makeKnight.js","domain/problem.js","App.js","reportWebVitals.js","index.js"],"names":["files","ranks","makeAllowedMoves","position","allowedMoves","push","indexOf","up","concat","right","down","left","filter","file","rank","includes","makeKnight","origin","knight","initial","canMoveTo","destination","undefined","find","getPosition","moves","moveTo","newPosition","visited","go","flag","forEach","square","Error","length","error","console","log","beenThere","App","reverse","map","index","className","classnames","Knight","Square","data-file","data-rank","name","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c509e84.chunk.js","sourcesContent":["export const files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']; // columns\nexport const ranks = [1, 2, 3, 4, 5, 6, 7, 8]; // rows\n","import { files, ranks } from './constants';\n\n// [file, rank]\n\nfunction up(position) {\n  const allowedMoves = [];\n  allowedMoves.push([files[files.indexOf(position[0]) - 1], position[1] + 2]);\n  allowedMoves.push([files[files.indexOf(position[0]) + 1], position[1] + 2]);\n  return allowedMoves;\n}\n\nfunction right(position) {\n  const allowedMoves = [];\n  allowedMoves.push([files[files.indexOf(position[0]) + 2], position[1] + 1]);\n  allowedMoves.push([files[files.indexOf(position[0]) + 2], position[1] - 1]);\n  return allowedMoves;\n}\n\nfunction down(position) {\n  const allowedMoves = [];\n  allowedMoves.push([files[files.indexOf(position[0]) + 1], position[1] - 2]);\n  allowedMoves.push([files[files.indexOf(position[0]) - 1], position[1] - 2]);\n  return allowedMoves;\n}\n\nfunction left(position) {\n  const allowedMoves = [];\n  allowedMoves.push([files[files.indexOf(position[0]) - 2], position[1] - 1]);\n  allowedMoves.push([files[files.indexOf(position[0]) - 2], position[1] + 1]);\n  return allowedMoves;\n}\n\nfunction makeAllowedMoves(position) {\n  return up(position)\n    .concat(right(position))\n    .concat(down(position))\n    .concat(left(position))\n    .filter(([file, rank]) => files.includes(file) && ranks.includes(rank));\n}\n\nexport default makeAllowedMoves;\n","import makeAllowedMoves from './makeAllowedMoves';\n\nfunction makeKnight(initial) {\n  let position = initial;\n\n  // INFO: may be deprecated\n  function canMoveTo(destination) {\n    return (\n      makeAllowedMoves(position).find(\n        ([file, rank]) => file === destination[0] && rank === destination[1]\n      ) !== undefined\n    );\n  }\n\n  function getPosition() {\n    return position;\n  }\n\n  function moves() {\n    return makeAllowedMoves(position);\n  }\n\n  function moveTo(newPosition) {\n    position = newPosition;\n  }\n\n  return {\n    canMoveTo,\n    getPosition,\n    moves,\n    moveTo\n  };\n}\n\nexport default makeKnight;\n","import makeKnight from './makeKnight';\n\nconst origin = ['b', 1];\nexport const knight = makeKnight(origin);\nexport const visited = [origin];\n\nfunction go(knight, visited) {\n  let flag = true;\n  const moves = knight.moves(); // [['a', 3], ['c', 3], ['d', 2]]\n\n  moves.forEach((square) => {\n    if (\n      visited.find(\n        ([file, rank]) => file === square[0] && rank === square[1]\n      ) === undefined &&\n      flag\n    ) {\n      knight.moveTo(square);\n      visited.push(square);\n      flag = false;\n    }\n  });\n\n  if (flag === true) {\n    throw new Error(`Oh Noes! \"${knight.getPosition()}\"`);\n  }\n}\n\nconst length = 23; // ['h', 8]\n\ntry {\n  while (visited.length < length) {\n    go(knight, visited);\n  }\n} catch (error) {\n  console.log(error);\n}\n","import classnames from 'classnames';\nimport { name, version } from '../package.json';\nimport './App.css';\nimport { files, ranks } from './domain/constants';\nimport { visited } from './domain/problem';\n\nfunction beenThere(position) {\n  return (\n    visited.find(\n      ([file, rank]) => file === position[0] && rank === position[1]\n    ) !== undefined\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      {[...ranks].reverse().map((rank, index) => {\n        return (\n          <ul\n            className={classnames({\n              'Rank--even': index % 2 === 0,\n              'Rank--odd': index % 2 === 1\n            })}\n            key={rank}\n          >\n            {files.map((file, index) => (\n              <li\n                className={classnames({\n                  Knight: beenThere([file, rank]),\n                  Square: !beenThere([file, rank])\n                })}\n                data-file={file}\n                data-rank={rank}\n                key={file}\n              >\n                {file}\n                {rank}\n              </li>\n            ))}\n          </ul>\n        );\n      })}\n      <footer>\n        {name} v{version}\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}